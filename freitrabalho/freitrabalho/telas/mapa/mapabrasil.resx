<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAASUVORK5CYII=
</value>
  </data>
</root>